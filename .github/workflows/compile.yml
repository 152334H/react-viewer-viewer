name: "compile"
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    strategy:
      fail-fast: false

    runs-on: windows-latest
    steps:
    - name: surely you jest
      run: |
        chcp 65001 #set code page to utf-8
        echo ("USERPROFILE=" + $env:USERPROFILE) >> $env:GITHUB_ENV
    - name: no way that ${{ env.USERPROFILE }} works now
      run: | # oops
        echo "$env:USERPROFILE"
        echo "$env:GITHUB_ENV"
        exit 1

    - uses: actions/checkout@v2
    # get nodejs stuff
    - name: setup node
      uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: 'npm'
    - name: Cache Node Modules
      id: node-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}
    - name: Install viewer-viewer Dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm install
    # js stuff is now installed. move on to rust stuff
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: actions/cache@v2
      with:
        path: | # not sure how to make this work
          ${{env.USERPROFILE}}/.cargo/bin/
          ${{env.USERPROFILE}}/.cargo/registry/index/
          ${{env.USERPROFILE}}/.cargo/registry/cache/
          ${{env.USERPROFILE}}/.cargo/git/db/
          src-tauri/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: # TODO: figure out how to set version correctly
        tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
        releaseName: "App v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: false
        includeDebug: true
